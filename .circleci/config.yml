version: 2.1

parameters:
  deploy_bucket:
    type: string
    default: "pip.astronomer.io"

workflows:
  build_and_deploy:
    jobs:
      - build:
          filters:  # required since `deploy` has tag filters AND requires `build`
            tags:
              only: /.*/
      - publish:
          context: "Pip Deploy"
          requires: [build]
          # Run this stage only for version-number tagged builds
          filters:
            tags:
              only: /^v\d+[.\d]+.*/
            branches:
              ignore: /.*/
jobs:
  build:
    docker:
      - image: circleci/python:3.7-buster
    environment:
      PIP_DISABLE_PIP_VERSION_CHECK: 'True'
      PYTEST_ADDOPTS: "--color=yes"

    steps:
      - checkout
      - &restore_venv
        restore_cache:
          keys:
            - deps-{{ .Branch }}-{{ checksum "setup.py" }}
            - deps-main-{{ checksum "setup.py" }}
      - run:
          name: Install test deps
          command: |
            # Use a virtual env to encapsulate everything in one folder for caching
            python -m venv .venv
            . .venv/bin/activate
            pip install -U pip
            pip install -e '.[test]'
      - save_cache:
          key: deps-{{ .Branch }}-{{ checksum "setup.py" }}
          paths:
            - ".venv"
            - "~/.cache"
      - run:
          name: check_style
          command: |
            . .venv/bin/activate
            flake8 --exclude=.venv
      - run:
          name: run_tests
          command: |
            . .venv/bin/activate
            mkdir test-results
            pytest --junitxml=test-results/junit.xml
      - run:
          name: build_wheel
          command: |
            . .venv/bin/activate
            python3 setup.py sdist bdist_wheel
      - store_test_results:
          path: test-results

      - persist_to_workspace:
          root: .
          paths:
            dist/*
      - store_artifacts:
          path: test-results

  publish:
    docker:
      - image: gcr.io/google.com/cloudsdktool/cloud-sdk:alpine
    steps:
      - checkout
      - *restore_venv
      - run:
          name: verify tag
          command: |-
            # Because we are running this stage in a non-standard container we
            # need to specify the full path
            python3 -m ensurepip
            python3 -m pip install setuptools
            . /home/circleci/project/.venv/bin/activate
            python3 setup.py verify
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Checkout release-utilities
          command: |-
            git clone git@github.com:astronomer/pip-release-utilities.git
      - run:
          name: Deploy to GCS Bucket
          # Even though there is a project field in the JSON credential, gsutil still needs a project set, so lets set pull it from it
          command: |-
            pip-release-utilities/gsutil-auth-helper.sh
            gsutil -m rsync -a public-read /tmp/workspace/dist/ gs://<< pipeline.parameters.deploy_bucket >>/v2/astronomer-fab-security-manager
      - run:
          name: Rebuild index.html
          command: |-
            pip-release-utilities/build-index-page.sh "<< pipeline.parameters.deploy_bucket >>" v2/astronomer-fab-security-manager
      - store_artifacts:
          path: /tmp/workspace/dist/
          destination: dist

